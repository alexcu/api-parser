<%#
  SplashKit __sklib_string wrapper
%>
type __sklib_string = record
  str: PChar;
  size: Integer;
  ptr: Pointer;
end;
<%#
  `__sklib_ptr' is a wrapper for typealiases to pointer types using type
  casts.
%>
type __sklib_ptr = Pointer;
<%#
  Structs must have each field converted to a compatible Lib type (i.e., the
  field type `foo' becomes `__sklib_foo'). Hence, we can use
  `lib_struct_field_for` for convenience.
%>
<%
  @structs.each do |struct|
%>
type __sklib_<%= struct[:name] %> = record
<%
    struct[:fields].each do |field_name, field_data|
%>
  <%= lib_struct_field_for(field_name, field_data) %>;
<%
    end # end fields.each
%>
end;
<%
  end # end structs.each
%>
